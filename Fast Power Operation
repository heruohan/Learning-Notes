定义：快速幂算法实质上是加快求幂运算的速度，假设求a**b,朴素的算法的时间复杂度是O(b),而快速幂运算能达到O(log(b)),速度提高很多，
其原理如下：
假如要求a**11,可以将11拆分为二进制，其二进制为0b1011,该二进制第i位的权重为2**(i-1)，且11=2**0+2**1+2**8，
则a**11=a**(2**0)*a**(2**1)*a**(2**3)=(a**1)*(a**2)*(a**8);我们在结合位运算符&和>>，求a**b的快速幂运算代码如下：

def FastPowerOperation(a,b):
    res=1
    tmp=a
    while(b):
        if(b & 1==1):   ##检查此位上二进制数为1，被权重数不为0；
            res*=tmp
        tmp*=tmp   ##除了原二进制的第一位，其余各位分别是a**(2的倍数)，既a**2,a**4,a**8,a**16....;这样tmp会满足要求，且当被权重数为1时，                   ##
        b>>=1      ##参与res运算，当被权重数为0时，不参与res运算；
    return(res)
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
